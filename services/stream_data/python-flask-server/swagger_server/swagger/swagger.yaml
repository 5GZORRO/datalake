---
swagger: "2.0"
info:
  description: "This is a simple server to support 5gzorro data lake stream data operations."
  version: "1.0.0"
  title: "Data Lake Stream Data Service API"
  contact:
    email: "meth@il.ibm.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/datalake/v1/stream_data"
tags:
- name: "transaction"
  description: "Operations on transaction ID"
schemes:
- "https"
- "http"
paths:
  /register/{transactionId}:
    post:
      tags:
      - "transaction"
      summary: "register transactionId for which data should be streamed"
      description: ""
      operationId: "register_transaction_topic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Parameters to get a entries related to transactionId"
        required: true
        schema:
          $ref: "#/definitions/TransactionQuery"
      responses:
        "201":
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.transaction_controller"
  /unregister/{transactionId}:
    post:
      tags:
      - "transaction"
      summary: "stop stream data for specified  transactionId"
      description: ""
      operationId: "unregister_transaction_topic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Parameters to unregister streaming for transactionId"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "204":
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.transaction_controller"
definitions:
  User:
    type: "object"
    properties:
      userId:
        type: "string"
      authToken:
        type: "string"
    xml:
      name: "User"
    example:
      authToken: "authToken"
      userId: "userId"
  TransactionInfo:
    type: "object"
    properties:
      topic:
        type: "string"
    xml:
      name: "TransactionInfo"
    example:
      topic: "topic1"
  TransactionQuery:
    type: "object"
    properties:
      userInfo:
        $ref: "#/definitions/User"
      transactionInfo:
        $ref: "#/definitions/TransactionInfo"
    xml:
      name: "TransactionQuery"
    example:
      userInfo:
        authToken: "authToken"
        userId: "userId"
      transactionInfo:
        topic: "topic1"
