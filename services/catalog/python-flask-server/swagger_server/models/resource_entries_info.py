# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResourceEntriesInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, resource_id: str=None, transaction_id: str=None, product_id: str=None, instance_id: str=None, metric_name: str=None, metric_value: str=None, timestamp: str=None, storage_location: str=None):  # noqa: E501
        """ResourceEntriesInfo - a model defined in Swagger

        :param resource_id: The resource_id of this ResourceEntriesInfo.  # noqa: E501
        :type resource_id: str
        :param transaction_id: The transaction_id of this ResourceEntriesInfo.  # noqa: E501
        :type transaction_id: str
        :param product_id: The product_id of this ResourceEntriesInfo.  # noqa: E501
        :type product_id: str
        :param instance_id: The instance_id of this ResourceEntriesInfo.  # noqa: E501
        :type instance_id: str
        :param metric_name: The metric_name of this ResourceEntriesInfo.  # noqa: E501
        :type metric_name: str
        :param metric_value: The metric_value of this ResourceEntriesInfo.  # noqa: E501
        :type metric_value: str
        :param timestamp: The timestamp of this ResourceEntriesInfo.  # noqa: E501
        :type timestamp: str
        :param storage_location: The storage_location of this ResourceEntriesInfo.  # noqa: E501
        :type storage_location: str
        """
        self.swagger_types = {
            'resource_id': str,
            'transaction_id': str,
            'product_id': str,
            'instance_id': str,
            'metric_name': str,
            'metric_value': str,
            'timestamp': str,
            'storage_location': str
        }

        self.attribute_map = {
            'resource_id': 'resourceId',
            'transaction_id': 'transactionId',
            'product_id': 'productId',
            'instance_id': 'instanceId',
            'metric_name': 'metricName',
            'metric_value': 'metricValue',
            'timestamp': 'timestamp',
            'storage_location': 'storageLocation'
        }

        self._resource_id = resource_id
        self._transaction_id = transaction_id
        self._product_id = product_id
        self._instance_id = instance_id
        self._metric_name = metric_name
        self._metric_value = metric_value
        self._timestamp = timestamp
        self._storage_location = storage_location

    @classmethod
    def from_dict(cls, dikt) -> 'ResourceEntriesInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResourceEntriesInfo of this ResourceEntriesInfo.  # noqa: E501
        :rtype: ResourceEntriesInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id(self) -> str:
        """Gets the resource_id of this ResourceEntriesInfo.


        :return: The resource_id of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id: str):
        """Sets the resource_id of this ResourceEntriesInfo.


        :param resource_id: The resource_id of this ResourceEntriesInfo.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def transaction_id(self) -> str:
        """Gets the transaction_id of this ResourceEntriesInfo.


        :return: The transaction_id of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id: str):
        """Sets the transaction_id of this ResourceEntriesInfo.


        :param transaction_id: The transaction_id of this ResourceEntriesInfo.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id

    @property
    def product_id(self) -> str:
        """Gets the product_id of this ResourceEntriesInfo.


        :return: The product_id of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: str):
        """Sets the product_id of this ResourceEntriesInfo.


        :param product_id: The product_id of this ResourceEntriesInfo.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def instance_id(self) -> str:
        """Gets the instance_id of this ResourceEntriesInfo.


        :return: The instance_id of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id: str):
        """Sets the instance_id of this ResourceEntriesInfo.


        :param instance_id: The instance_id of this ResourceEntriesInfo.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def metric_name(self) -> str:
        """Gets the metric_name of this ResourceEntriesInfo.


        :return: The metric_name of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name: str):
        """Sets the metric_name of this ResourceEntriesInfo.


        :param metric_name: The metric_name of this ResourceEntriesInfo.
        :type metric_name: str
        """

        self._metric_name = metric_name

    @property
    def metric_value(self) -> str:
        """Gets the metric_value of this ResourceEntriesInfo.


        :return: The metric_value of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._metric_value

    @metric_value.setter
    def metric_value(self, metric_value: str):
        """Sets the metric_value of this ResourceEntriesInfo.


        :param metric_value: The metric_value of this ResourceEntriesInfo.
        :type metric_value: str
        """

        self._metric_value = metric_value

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this ResourceEntriesInfo.


        :return: The timestamp of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this ResourceEntriesInfo.


        :param timestamp: The timestamp of this ResourceEntriesInfo.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def storage_location(self) -> str:
        """Gets the storage_location of this ResourceEntriesInfo.


        :return: The storage_location of this ResourceEntriesInfo.
        :rtype: str
        """
        return self._storage_location

    @storage_location.setter
    def storage_location(self, storage_location: str):
        """Sets the storage_location of this ResourceEntriesInfo.


        :param storage_location: The storage_location of this ResourceEntriesInfo.
        :type storage_location: str
        """

        self._storage_location = storage_location
