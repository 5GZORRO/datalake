# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util
from swagger_server.models.service_metadata import ServiceMetadata

class ServiceInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, service_metadata: ServiceMetadata=None, container_definition: object=None):  # noqa: E501
        """ServiceInfo - a model defined in Swagger

        :param service_metadata: The service_metadata of this ServiceInfo.  # noqa: E501
        :type service_metadata: ServiceMetadata
        :param container_definition: The container_definition of this ServiceInfo.  # noqa: E501
        :type container_definition: object
        """
        self.swagger_types = {
            'service_metadata': ServiceMetadata,
            'container_definition': object
        }

        self.attribute_map = {
            'service_metadata': 'serviceMetadata',
            'container_definition': 'containerDefinition'
        }

        self._service_metadata = service_metadata
        self._container_definition = container_definition

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceInfo of this ServiceInfo.  # noqa: E501
        :rtype: ServiceInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_metadata(self) -> ServiceMetadata:
        """Gets the service_metadata of this ServiceInfo.


        :return: The service_metadata of this ServiceInfo.
        :rtype: ServiceMetadata
        """
        return self._service_metadata

    @service_metadata.setter
    def service_metadata(self, service_metadata: ServiceMetadata):
        """Sets the service_metadata of this ServiceInfo.


        :param service_metadata: The service_metadata of this ServiceInfo.
        :type service_metadata: ServiceMetadata
        """

        self._service_metadata = service_metadata

    @property
    def container_definition(self) -> object:
        """Gets the container_definition of this ServiceInfo.


        :return: The container_definition of this ServiceInfo.
        :rtype: object
        """
        return self._container_definition

    @container_definition.setter
    def container_definition(self, container_definition: object):
        """Sets the container_definition of this ServiceInfo.


        :param container_definition: The container_definition of this ServiceInfo.
        :type container_definition: object
        """

        self._container_definition = container_definition
